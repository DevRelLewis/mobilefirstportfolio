This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-03-27T14:58:13.380Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
public/
  index.html
  manifest.json
  robots.txt
src/
  components/
    ContactForm.tsx
    Navbar.tsx
  pages/
    Home.tsx
    PassionLink.css
    ProfessionalPortfolio.tsx
    Welcome.css
    Welcome.tsx
  App.css
  App.test.tsx
  App.tsx
  index.css
  index.tsx
  logo.svg
  react-app-env.d.ts
  reportWebVitals.ts
  setupTests.ts
.gitignore
package.json
postcss.config.js
README.md
tailwind.config.js
tsconfig.json

================================================================
Repository Files
================================================================

================
File: public/index.html
================
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/ricksanchez_120.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    
    <!-- New Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&family=Danfo&family=Jacquard+12&family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Orbitron&family=Pixelify+Sans:wght@400..700&family=Press+Start+2P&display=swap" rel="stylesheet">
    
    <title>Lewis Meyers | Portfolio</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>

================
File: public/manifest.json
================
{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}

================
File: public/robots.txt
================
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

================
File: src/components/ContactForm.tsx
================
import React, { useState } from 'react';

const ContactForm: React.FC = () => {
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');

  return (
    <section id="contact" className="py-[130px] px-4 text-center">
      <h2 className="text-2xl md:text-3xl font-bold mb-10 text-black">Contact</h2>
      
      <div className="max-w-2xl mx-auto">
        {/* The key part is using FormSubmit's action URL with your email */}
        <form 
          action="https://formsubmit.co/meyerslewis193@gmail.com" 
          method="POST"
          className="space-y-6"
          onSubmit={() => {
            setIsSubmitting(true);
            // This timeout simulates the form submission process for UI feedback
            // The actual submission is handled by the form's action
            setTimeout(() => {
              setIsSubmitting(false);
              setSubmitStatus('success');
            }, 1000);
          }}
        >
          {/* Optional: Disable captcha */}
          <input type="hidden" name="_captcha" value="false" />
          
          {/* Optional: Set a success page or use _next to stay on page */}
          <input type="hidden" name="_next" value={window.location.href} />
          
          {/* Add subject prefix */}
          <input type="hidden" name="_subject" value="New submission from portfolio!" />
          
          {/* Prevent spam with honeypot */}
          <input type="text" name="_honey" style={{ display: 'none' }} />
          
          <div>
            <input
              type="text"
              name="name"
              placeholder="Name"
              required
              className="w-full px-4 py-3 rounded-md border-2 border-primary-300 bg-white bg-opacity-10 text-black placeholder-grey placeholder-opacity-70 focus:outline-none focus:ring-2 focus:ring-primary-300 font-pixel text-sm"
            />
          </div>
          
          <div>
            <input
              type="email"
              name="email"
              placeholder="Your email"
              required
              className="w-full px-4 py-3 rounded-md border-2 border-primary-300 bg-white bg-opacity-10 text-black placeholder-grey placeholder-opacity-70 focus:outline-none focus:ring-2 focus:ring-primary-300 font-pixel text-sm"
            />
          </div>
          
          <div>
            <input
              type="text"
              name="subject"
              placeholder="Subject"
              required
              className="w-full px-4 py-3 rounded-md border-2 border-primary-300 bg-white bg-opacity-10 text-black placeholder-grey placeholder-opacity-70 focus:outline-none focus:ring-2 focus:ring-primary-300 font-pixel text-sm"
            />
          </div>
          
          <div>
            <textarea
              name="message"
              placeholder="Message..."
              required
              rows={8}
              className="w-full px-4 py-3 rounded-md border-2 border-primary-300 bg-white bg-opacity-10 text-black placeholder-grey placeholder-opacity-70 focus:outline-none focus:ring-2 focus:ring-primary-300 font-pixel text-sm resize-none"
            />
          </div>
          
          <div>
            <button
              type="submit"
              disabled={isSubmitting}
              className="w-full py-3 px-6 bg-primary-600 hover:bg-primary-700 text-black rounded-md transition-colors duration-300 font-pixel text-sm md:text-base disabled:opacity-70"
            >
              {isSubmitting ? 'Submitting...' : 'Submit'}
            </button>
          </div>
          
          {submitStatus === 'success' && (
            <div className="bg-green-600 bg-opacity-80 text-white py-2 px-4 rounded-md font-pixel text-sm animate-pulse">
              Message sent! Thanks for reaching out.
            </div>
          )}
          
          {submitStatus === 'error' && (
            <div className="bg-red-600 bg-opacity-80 text-white py-2 px-4 rounded-md font-pixel text-sm">
              Something went wrong. Please try again.
            </div>
          )}
        </form>
      </div>
    </section>
  );
};

export default ContactForm;

================
File: src/components/Navbar.tsx
================
import React, { useState, useEffect } from 'react';
import { Link, useLocation } from 'react-router-dom';

interface NavbarProps {
  scrollToSection: (id: string) => void;
}

const Navbar: React.FC<NavbarProps> = ({ scrollToSection }) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [hostname, setHostname] = useState<string>('');
  const location = useLocation();
  
  useEffect(() => {
    setHostname(window.location.hostname);
  }, []);
  
  const isProfessionalPage = location.pathname === '/professional' || 
                           (location.pathname === '/' && hostname.includes('portfolio'));

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  const handleNavClick = (id: string) => {
    scrollToSection(id);
    setIsMenuOpen(false);
  };

  return (
    <header className={`fixed top-0 left-0 w-full z-50 shadow-md ${isProfessionalPage ? 'bg-gray-800' : 'bg-purple-700'}`}>
      <div className="w-full py-4">
        <div className="flex justify-between items-center px-6">
          <button 
            onClick={() => handleNavClick('home')}
            className="text-white font-pixel text-xl focus:outline-none"
          >
            Lewis.dev
          </button>
          <nav className="hidden md:block">
            <ul className="flex space-x-8">
              <li>
                <button 
                  onClick={() => handleNavClick('home')}
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  Home
                </button>
              </li>
              <li>
                <button 
                  onClick={() => handleNavClick('projects')}
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  Projects
                </button>
              </li>
              <li>
                <button 
                  onClick={() => handleNavClick('resume')}
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  Resume
                </button>
              </li>
              <li>
                <button 
                  onClick={() => handleNavClick('contact')}
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  Contact
                </button>
              </li>
              <li>
                <Link 
                  to="/"
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  {hostname.includes('portfolio') ? 'Passion Portfolio' : 'Simple Resume'}
                </Link>
              </li>
              <li>
                <button 
                  onClick={() => window.open('https://www.linkedin.com/in/lewiscmeyers/', '_blank')}
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  LinkedIn
                </button>
              </li>
            </ul>
          </nav>

          <button 
            onClick={toggleMenu}
            className="text-white focus:outline-none md:hidden"
            aria-label="Toggle menu"
          >
            {isMenuOpen ? (
              <span className="text-2xl font-bold">×</span>
            ) : (
              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            )}
          </button>
        </div>

        {isMenuOpen && (
          <nav className="mt-3 py-3 px-6 md:hidden">
            <ul className="flex flex-col space-y-4">
              <li>
                <button 
                  onClick={() => handleNavClick('home')}
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  Home
                </button>
              </li>
              <li>
                <button 
                  onClick={() => handleNavClick('projects')}
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  Projects
                </button>
              </li>
              <li>
                <button 
                  onClick={() => handleNavClick('resume')}
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  Resume
                </button>
              </li>
              <li>
                <button 
                  onClick={() => handleNavClick('contact')}
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  Contact
                </button>
              </li>
              <li>
                <Link 
                  to="/"
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  {hostname.includes('portfolio') ? 'Passion Portfolio' : 'Simple Resume'}
                </Link>
              </li>
              <li>
                <button 
                  onClick={() => window.open('https://www.linkedin.com/in/lewiscmeyers/', '_blank')}
                  className="text-white font-pixel hover:opacity-80 focus:outline-none"
                >
                  LinkedIn
                </button>
              </li>
            </ul>
          </nav>
        )}
      </div>
    </header>
  );
};

export default Navbar;

================
File: src/pages/Home.tsx
================
import React, { useState, useEffect, useRef } from 'react';
import Navbar from '../components/Navbar';
import ContactForm from '../components/ContactForm';
import { Link } from 'react-router-dom';

const Home: React.FC = () => {
  const [isLoading, setIsLoading] = useState(true);
  const resumeContentRef = useRef<HTMLDivElement>(null);
  const bottomRef = useRef<HTMLDivElement>(null);
  const [floatingIcons, setFloatingIcons] = useState<FloatingIcon[]>([]);

  interface FloatingIcon {
    top: string;
    left: string;
    size: string;
    color: string;
    animationDuration: string;
    animationDelay: string;
  }

  const techIcons = [
    '/docker.png',
    '/git.png',
    '/github.png',
    '/jira.png',
    '/vscode.png',
    '/js.png',
    '/nextjs-64.png',
    '/bootstrap.png',
    '/tailwindcss.png',
    '/html.png',
    '/css.png',
    '/mantine.png',
    '/typescript.png',
    '/postgres.png',
    '/sql.png'
  ];
  
  useEffect(() => {
  const createRelativePositions = (isMobile: boolean): FloatingIcon[] => {
    const basePositions = [
      // Top row
      { top: '35%', left: '38%' },
      { top: '35%', left: '62%' },
      
      // Middle sides
      { top: '50%', left: '30%' },
      { top: '50%', left: '70%' },
      
      // Bottom row
      { top: '65%', left: '38%' },
      { top: '65%', left: '62%' },
      
      // Extra positions
      { top: '42%', left: '32%' },
      { top: '42%', left: '68%' },
      { top: '58%', left: '32%' },
      { top: '58%', left: '68%' },
    ];
    
    return basePositions.map((pos, index) => ({
      ...pos,
      size: isMobile ? '34px' : `${55 + (index % 4) * 5}px`,
      color: [
        'rgba(186, 85, 211, 0.8)',
        'rgba(138, 43, 226, 0.8)',
        'rgba(75, 0, 130, 0.8)'
      ][index % 3],
      // Vary animation timing for more natural movement
      animationDuration: `${6 + (index % 6)}s`,
      animationDelay: `${index * 0.7}s`
    }));
  };
  
  const handleResize = () => {
    if (window.innerWidth < 768) {
      setFloatingIcons(createRelativePositions(true));
    } else {
      setFloatingIcons(createRelativePositions(false));
    }
  };
  
  handleResize();
  
  window.addEventListener('resize', handleResize);
  
  return () => window.removeEventListener('resize', handleResize);
}, []);

  useEffect(() => {
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 500);
    
    return () => clearTimeout(timer);
  }, []);

  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  const handleOnType = () => {
    if (bottomRef.current) {
      bottomRef.current.scrollIntoView({ behavior: 'smooth' });
    }
  };

  const scrollToSection = (id: string) => {
    const element = document.getElementById(id);
    if (element) {
      const offset = 100; 
      const elementPosition = element.getBoundingClientRect().top;
      const offsetPosition = elementPosition + window.pageYOffset - offset;
      window.scrollTo({ top: offsetPosition, behavior: 'smooth' });
    }
  };

  return (
    <div className={`min-h-screen bg-gradient-to-b from-primary-300 via-primary-200 to-primary-100 font-pixel text-white transition-opacity duration-1000 ${!isLoading ? 'opacity-100' : 'opacity-0'}`}>
      <Navbar scrollToSection={scrollToSection} />

      {/* Hero Section */}
      <section id="home" className="pt-20 px-4 min-h-screen flex flex-col items-center justify-center relative">
        <div className="absolute inset-0 pointer-events-none">
        {floatingIcons.map((icon, index) => {
          const iconSrc = techIcons[index % techIcons.length];
          return (
            <div 
              key={index} 
              className="absolute rounded-full shadow-lg flex items-center justify-center overflow-hidden"
              style={{ 
                top: icon.top, 
                left: icon.left,
                width: icon.size,
                height: icon.size,
                backgroundColor: icon.color,
                animation: `float ${icon.animationDuration} infinite alternate ease-in-out`,
                animationDelay: icon.animationDelay
              }}
            >
              <img
                src={iconSrc}
                alt="Tech Icon"
                className="w-4/5 h-4/5 object-contain filter brightness-150 drop-shadow-lg"
              />
            </div>
          );
        })}
        </div>
        <div className="z-10 text-center">
          <img 
            src="./lewis_8bit.png" 
            alt="Lewis Meyers" 
            className="w-32 h-32 md:w-40 md:h-40 rounded-full border-4 border-white object-cover shadow-lg mx-auto"
          />
          <h1 className="mt-3 text-xl md:text-2xl font-bold text-black">Lewis Meyers</h1>
          <p className="mt-2 text-base md:text-lg max-w-md mx-auto text-black">
            Frontend Developer
          </p>
          <p className="mt-2 text-base md:text-lg max-w-md mx-auto text-black">
            meyerslewis193@gmail.com
          </p>
        </div>
      </section>

      <section id="projects" className="py-32 px-4 text-center">
        <h2 className="text-2xl md:text-3xl font-bold mb-10 text-black">My Projects</h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto">
      <div className="bg-white bg-opacity-10 rounded-lg overflow-hidden shadow-lg border-2 border-white border-opacity-20 backdrop-blur-sm transition-transform duration-300 hover:scale-105">
        <div className="h-40 bg-primary-500 flex items-center justify-center">
        <img 
            src="/dream-net.png" 
            alt="Dream Net AI Screenshot" 
            className="w-full h-full object-cover"
          />
        </div>
        <div className="p-5">
          <h3 className="text-lg md:text-xl mb-2">Dream Net AI</h3>
          <p className="text-white text-opacity-80 text-sm mb-4">
            AI dream interpreter using Next.js and ChatGPT, trained on specialized dream data with 25% improved accuracy.
          </p>
          <div className="flex flex-wrap gap-2 mb-4 justify-center">
            <span className="px-2 py-1 bg-primary-600 rounded-full text-xs">Next.js</span>
            <span className="px-2 py-1 bg-primary-600 rounded-full text-xs">ChatGPT</span>
            <span className="px-2 py-1 bg-primary-600 rounded-full text-xs">Supabase</span>
          </div>
          <button 
            onClick={() => window.open('https://dreamy-xi.vercel.app/', '_blank')} 
            className="pixel-btn border-black text-black"
          >
            View Project
          </button>
        </div>
      </div>

      <div className="bg-white bg-opacity-10 rounded-lg overflow-hidden shadow-lg border-2 border-white border-opacity-20 backdrop-blur-sm transition-transform duration-300 hover:scale-105">
        <div className="h-40 bg-primary-500 flex items-center justify-center">
        <img 
            src="/sokeswig.png" 
            alt="Soke2x Smoothie Shop Screenshot" 
            className="w-full h-full object-cover"
          />
        </div>
        <div className="p-5">
          <h3 className="text-lg md:text-xl mb-2">Soke2x Smoothie Shop</h3>
          <p className="text-white text-opacity-80 text-sm mb-4">
            Interactive Next.js website for a smoothie brand featuring 3D models, animations, and custom audio visualizers for an immersive user experience.
          </p>
          <div className="flex flex-wrap gap-2 mb-4 justify-center">
            <span className="px-2 py-1 bg-primary-600 rounded-full text-xs">Next.js</span>
            <span className="px-2 py-1 bg-primary-600 rounded-full text-xs">Three.js</span>
            <span className="px-2 py-1 bg-primary-600 rounded-full text-xs">Howler.js</span>
          </div>
          <a href="https://soke2x.vercel.app/" target="_blank" rel="noopener noreferrer">
            <button className="pixel-btn border-black text-black">View Project</button>
          </a>
        </div>
      </div>
    </div>
      </section>

      {/* Resume Section */}
      <section id="resume" className="py-28 px-4 font-lato" ref={resumeContentRef}>
        <h2 className="text-2xl md:text-3xl font-bold text-center mb-10 text-black">Resume</h2>
        
        <div className="max-w-3xl mx-auto bg-white bg-opacity-95 p-5 md:p-8 rounded-lg shadow-lg text-black">
            {/* Resume Header */}
            <div className="flex flex-col sm:flex-row justify-between items-start mb-6 gap-4">
                <div>
                    <h2 className="text-xl md:text-2xl font-bold mb-2">Lewis Meyers</h2>
                    <p className="text-sm mb-2 leading-relaxed">
                    <a href="mailto:meyerslewis193@gmail.com" className="text-blue-700 hover:underline">
                        meyerslewis193@gmail.com
                    </a>
                    </p>
                    <p className="text-sm mb-2 leading-relaxed">
                    571-294-9222 |{" "}
                    <a
                        href="https://www.linkedin.com/in/lewiscmeyers/"
                        className="text-blue-700 hover:underline"
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        LinkedIn
                    </a>{" "}
                    | {" "}
                    <a 
                        href="https://lewismeyers.dev" 
                        className="text-blue-700 hover:underline"
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        lewismeyers.dev
                    </a>
                    </p>
                </div>
                
                <a
                    href="/01LewisMeyers.pdf"
                    download="01LewisMeyers.pdf"
                    className="px-3 py-2 bg-primary-600 text-white text-sm rounded hover:bg-primary-700 transition-colors font-lato flex items-center whitespace-nowrap"
                >
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                    </svg>
                    Download PDF
                </a>
                </div>
            <div className="text-left">

            <h3 className="text-lg md:text-xl font-bold mt-6 mb-3 border-b-2 border-gray-300 pb-2 text-primary-700">
            TOOLS
            </h3>
            <div className="mb-4">
            <ul className="list-disc ml-5 mb-3 text-sm leading-relaxed custom-bullets">
                <li className="mb-3">
                Git, Github, Docker, Jira, Visual Studio Code
                </li>
                <li className="mb-3">
                JavaScript-TypeScript, Next.js, Bootstrap, HTML5/CSS3, TailwindCSS, MantineCSS
                </li>
            </ul>
            </div>

            <h3 className="text-lg md:text-xl font-bold mt-6 mb-3 border-b-2 border-gray-300 pb-2 text-primary-700">
                EXPERIENCE
            </h3>
            
            <div className="mb-4">
                <div className="font-bold text-base md:text-lg mb-1 text-primary-600">AI Frontend/Tier 3 Engineer</div>
                <div className="text-sm mb-2">Teachstone, Virginia, June 2023 – Present</div>
                <ul className="list-disc ml-5 mb-4 text-sm leading-relaxed custom-bullets">
                <li className="mb-3">
                    Designed and refined Figma and React/TypeScript UIs, improving reporting tool accessibility and UX, boosting company-wide adoption by 40%.
                </li>
                <li className="mb-3">
                    Resolved 10-15 monthly Salesforce tickets and automated Java/SQL workflows, cutting turnaround time by 30% and enhancing AI tool efficiency by 25%.
                </li>
                <li className="mb-3">
                    Upgraded reporting dashboards with real-time analytics, increasing user engagement by 20% and supporting data-driven decisions.
                </li>
                </ul>
            </div>
            <div className="mb-4">
                <div className="font-bold text-base md:text-lg mb-1 text-primary-600">AI Platform Engineer</div>
                <div className="text-sm mb-2">Hyperlink, SF Bay Area, Jan 2024 – May 2024</div>
                <ul className="list-disc ml-5 mb-4 text-sm leading-relaxed custom-bullets">
                <li className="mb-3">
                    Raised $3.2M at SXSW 2024 through an SVP pitch, delivering the AI speech generator MVP on time with 50+ users engaging over 5 minutes each.
                </li>
                <li className="mb-3">
                    Built TypeScript components and optimized Next.js APIs, boosting platform stability by 30% and speeding up 100+ daily queries.
                </li>
                <li className="mb-3">
                    Partnered with product teams to refine UX, growing user retention by 15% and solidifying Hyperlink's SXSW impact.
                </li>
                </ul>
            </div>
            <div className="mb-4">
                <div className="font-bold text-base md:text-lg mb-1 text-primary-600">Intern Full Stack Developer</div>
                <div className="text-sm mb-2">Dank Coders, SF Bay Area, Feb 2023 – Feb 2024</div>
                <ul className="list-disc ml-5 mb-4 text-sm leading-relaxed custom-bullets">
                <li className="mb-3">
                    Designed a 3D ecommerce site with Three.js and Figma UI/UX, growing smoothie shop orders from 5-10 daily (Feb 2024) to 15-20 (Feb 2025).
                </li>
                <li className="mb-3">
                    Integrated Node.js for optimized navigation and email APIs, cutting response times by 50% and doubling order volume in 12 months.
                </li>
                <li className="mb-3">
                    Collaborated with the client to refine features, increasing customer satisfaction by 25% and securing repeat orders.
                </li>
                </ul>
            </div>
            <div className="mb-4">
                <div className="font-bold text-base md:text-lg mb-1 text-primary-600">Infantryman/Tanker</div>
                <div className="text-sm mb-2">Army National Guard, Leesburg, VA, Dec 2015 – Dec 2021</div>
                <ul className="list-disc ml-5 mb-4 text-sm leading-relaxed custom-bullets">
                <li className="mb-3">
                    Patrolled entry points and monitored $45M+ in surveillance equipment, weaponry and 200+ vehicles daily to secure 30+ personnel and 200+ visitors across a 12+ hour shift.
                </li>
                <li className="mb-3">
                    Key personnel in M1 Abrams Tank operations in Kuwait, managing target detection, gun control, and maintenance with a 4 person team while conducting 40+ member drills and maneuvers.
                </li>
                <li className="mb-3">
                    Led logistics training for 10+ troops, reducing equipment downtime by 15% and ensuring mission readiness during deployments.
                </li>
                </ul>
            </div>

            <h3 className="text-lg md:text-xl font-bold mt-6 mb-3 border-b-2 border-gray-300 pb-2 text-primary-700">
                PROJECTS
            </h3>
            <div className="mb-4">
                <div className="font-bold text-base md:text-lg mb-1 text-primary-600">Dream Net AI Dream Interpreter</div>
                <ul className="list-disc ml-5 mb-4 text-sm leading-relaxed custom-bullets">
                <li className="mb-3">
                    Built an AI dream interpreter using Next.js and ChatGPT (trained on specialized dream data), improving interpretation accuracy by 25% during a 30-tester beta.
                </li>
                <li className="mb-3">
                    Implemented Supabase for user authentication and backend services, ensuring real-time data management and secure access.
                </li>
                </ul>
            </div>
            <div className="mb-4">
                <div className="font-bold text-base md:text-lg mb-1 text-primary-600">Automated Options Trading Bot</div>
                <ul className="list-disc ml-5 mb-4 text-sm leading-relaxed custom-bullets">
                <li className="mb-3">
                    Coded a Python bot with Alpaca API and OpenAI, delivering 15% ROI in $100,000 paper money tests.
                </li>
                <li className="mb-3">
                    Designed a Streamlit dashboard with advanced strategies for real-time trade monitoring and execution.
                </li>
                </ul>
            </div>
            </div>
        </div>
      </section>
      <style>
        {`
          .custom-bullets li::marker {
            color: #9333ea;
          }
        `}
      </style>
        <ContactForm />
        <footer className="bg-gray-800 text-white py-8 px-4 text-center font-pixel">
        <p className="mb-4">© {new Date().getFullYear()} Lewis Meyers. All rights reserved.</p>
        <div className="flex justify-center space-x-4">
          <a 
            href="https://www.linkedin.com/in/lewiscmeyers/" 
            target="_blank" 
            rel="noopener noreferrer"
            className="text-gray-300 hover:text-white transition-colors"
          >
            LinkedIn
          </a>
          <a 
            href="mailto:meyerslewis193@gmail.com" 
            className="text-gray-300 hover:text-white transition-colors"
          >
            Email
          </a>
          <Link 
            to="/" 
            className="text-gray-300 hover:text-white transition-colors"
          >
            Simple Resume
          </Link>
        </div>
      </footer>
    </div>
  );
};

export default Home;

================
File: src/pages/PassionLink.css
================
.passion-link, .passion-link-footer {
    position: relative;
    text-decoration: none;
    transition: all 0.3s ease;
    background-clip: text;
    -webkit-background-clip: text;
    transform-origin: center;
  }
  
  .passion-link {
    padding: 2px 4px;
  }
  
  .passion-link-footer {
    display: inline-block;
    padding: 1px 2px;
  }
  
  .passion-link:hover, .passion-link-footer:hover {
    text-shadow: 0 0 8px rgba(139, 92, 246, 0.7);
    font-weight: 800;
    letter-spacing: 0.05em;
  }
  
  .passion-link:hover {
    transform: scale(1.15);
  }
  
  .passion-link-footer:hover {
    transform: scale(1.08); 
  }
  
  .passion-link::before, .passion-link-footer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg, 
      rgba(147, 51, 234, 0), 
      rgba(147, 51, 234, 0.5), 
      rgba(139, 92, 246, 0.8), 
      rgba(147, 51, 234, 0.5), 
      rgba(147, 51, 234, 0)
    );
    background-size: 200% 100%;
    background-position: 100% 0;
    border-radius: 4px;
    opacity: 0;
    transition: opacity 0.3s ease, background-position 1s ease;
    z-index: -1;
  }
  
  .passion-link:hover::before, .passion-link-footer:hover::before {
    opacity: 1;
    background-position: 0% 0;
  }
  
  .passion-link::after, .passion-link-footer::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    bottom: -2px;
    left: 0;
    background: linear-gradient(
      90deg, 
      rgba(147, 51, 234, 0), 
      rgba(147, 51, 234, 1), 
      rgba(139, 92, 246, 1), 
      rgba(147, 51, 234, 1), 
      rgba(147, 51, 234, 0)
    );
    background-size: 200% 100%;
    transform: scaleX(0);
    transform-origin: center;
    transition: transform 0.4s ease;
  }
  
  .passion-link:hover::after, .passion-link-footer:hover::after {
    transform: scaleX(1);
  }

================
File: src/pages/ProfessionalPortfolio.tsx
================
// src/pages/ProfessionalPortfolio.tsx
import React, { useRef } from 'react';
import { Link } from 'react-router-dom';
import './PassionLink.css';

const ProfessionalPortfolio: React.FC = () => {
  const resumeContentRef = useRef<HTMLDivElement>(null);

  const scrollToSection = (id: string) => {
    const element = document.getElementById(id);
    if (element) {
      const offset = 100; // Offset to account for the fixed header
      const elementPosition = element.getBoundingClientRect().top;
      const offsetPosition = elementPosition + window.pageYOffset - offset;
      window.scrollTo({ top: offsetPosition, behavior: 'smooth' });
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 font-lato text-gray-800">
      {/* Simple Header/Navbar */}
      <header className="fixed top-0 left-0 w-full bg-white shadow-md z-50">
        <div className="container mx-auto px-6 py-4">
          <div className="flex justify-between items-center">
            <div className="text-xl font-bold text-gray-800">Lewis Meyers</div>
            <nav>
              <ul className="flex space-x-6">
                <li>
                  <button 
                    onClick={() => scrollToSection('resume')}
                    className="text-gray-700 hover:text-gray-900 font-lato"
                  >
                    Resume
                  </button>
                </li>
                <li>
                  <button 
                    onClick={() => scrollToSection('projects')}
                    className="text-gray-700 hover:text-gray-900 font-lato"
                  >
                    Projects
                  </button>
                </li>
                <li>
                <Link 
                    to="/welcome"
                    className="text-purple-600 hover:text-purple-500 font-bold transition-all duration-300 passion-link"
                    >
                    Passion Portfolio
                </Link>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </header>

      {/* Profile Section */}
      <section className="pt-32 pb-16 px-4 bg-white">
        <div className="container mx-auto flex flex-col md:flex-row items-center justify-center gap-8">
          <div className="w-40 h-40 md:w-48 md:h-48 bg-gray-200 rounded-full flex items-center justify-center border-4 border-gray-100 shadow-lg">
            <img 
            src="./lewis_prof.png" 
            alt="Lewis Meyers" 
            className="w-32 h-32 md:w-40 md:h-40 rounded-full border-4 border-white object-cover shadow-lg mx-auto"         />
          </div>
          
          <div className="text-center md:text-left">
            <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-2">Lewis Meyers</h1>
            <p className="text-xl text-gray-600 mb-4">Frontend Developer</p>
            <div className="flex flex-wrap justify-center md:justify-start gap-4">
              <a 
                href="mailto:meyerslewis193@gmail.com"
                className="text-blue-600 hover:text-blue-800 transition-colors"
              >
                meyerslewis193@gmail.com
              </a>
              <a 
                href="https://www.linkedin.com/in/lewiscmeyers/"
                target="_blank"
                rel="noopener noreferrer"
                className="text-blue-600 hover:text-blue-800 transition-colors"
              >
                LinkedIn
              </a>
              <a 
                href="/01LewisMeyers.pdf"
                download="01LewisMeyers.pdf"
                className="text-blue-600 hover:text-blue-800 transition-colors"
              >
                Download Resume
              </a>
            </div>
          </div>
        </div>
      </section>

      {/* Resume Section */}
      <section id="resume" className="py-12 px-4" ref={resumeContentRef}>
        <div className="container mx-auto max-w-4xl bg-white p-6 md:p-8 rounded-lg shadow-md">
          <h2 className="text-2xl font-bold mb-6 text-gray-800 border-b-2 border-gray-200 pb-2">Professional Experience</h2>
          
          {/* Tools Section */}
          <div className="mb-8">
            <h3 className="text-xl font-bold mb-4 text-gray-700">Tools & Technologies</h3>
            <div className="mb-4">
              <ul className="list-disc ml-5 text-gray-700 space-y-2">
                <li>Git, Github, Docker, Jira, Visual Studio Code</li>
                <li>JavaScript-TypeScript, Next.js, Bootstrap, HTML5/CSS3, TailwindCSS, MantineCSS</li>
              </ul>
            </div>
          </div>
          
          {/* Experience 1 */}
          <div className="mb-8">
            <div className="flex flex-col md:flex-row md:justify-between md:items-start mb-2">
              <h3 className="text-xl font-bold text-gray-700">AI Frontend/Tier 3 Engineer</h3>
              <span className="text-gray-600 text-sm mt-1 md:mt-0">June 2023 – Present</span>
            </div>
            <p className="text-gray-600 italic mb-3">Teachstone, Virginia</p>
            <ul className="list-disc ml-5 text-gray-700 space-y-2">
              <li>Designed and refined Figma and React/TypeScript UIs, improving reporting tool accessibility and UX, boosting company-wide adoption by 40%.</li>
              <li>Resolved 10-15 monthly Salesforce tickets and automated Java/SQL workflows, cutting turnaround time by 30% and enhancing AI tool efficiency by 25%.</li>
              <li>Upgraded reporting dashboards with real-time analytics, increasing user engagement by 20% and supporting data-driven decisions.</li>
            </ul>
          </div>
          
          {/* Experience 2 */}
          <div className="mb-8">
            <div className="flex flex-col md:flex-row md:justify-between md:items-start mb-2">
              <h3 className="text-xl font-bold text-gray-700">AI Platform Engineer</h3>
              <span className="text-gray-600 text-sm mt-1 md:mt-0">Jan 2024 – May 2024</span>
            </div>
            <p className="text-gray-600 italic mb-3">Hyperlink, SF Bay Area</p>
            <ul className="list-disc ml-5 text-gray-700 space-y-2">
              <li>Raised $3.2M at SXSW 2024 through an SVP pitch, delivering the AI speech generator MVP on time with 50+ users engaging over 5 minutes each.</li>
              <li>Built TypeScript components and optimized Next.js APIs, boosting platform stability by 30% and speeding up 100+ daily queries.</li>
              <li>Partnered with product teams to refine UX, growing user retention by 15% and solidifying Hyperlink's SXSW impact.</li>
            </ul>
          </div>
          
          {/* Experience 3 */}
          <div className="mb-8">
            <div className="flex flex-col md:flex-row md:justify-between md:items-start mb-2">
              <h3 className="text-xl font-bold text-gray-700">Intern Full Stack Developer</h3>
              <span className="text-gray-600 text-sm mt-1 md:mt-0">Feb 2023 – Feb 2024</span>
            </div>
            <p className="text-gray-600 italic mb-3">Dank Coders, SF Bay Area</p>
            <ul className="list-disc ml-5 text-gray-700 space-y-2">
              <li>Designed a 3D ecommerce site with Three.js and Figma UI/UX, growing smoothie shop orders from 5-10 daily (Feb 2024) to 15-20 (Feb 2025).</li>
              <li>Integrated Node.js for optimized navigation and email APIs, cutting response times by 50% and doubling order volume in 12 months.</li>
              <li>Collaborated with the client to refine features, increasing customer satisfaction by 25% and securing repeat orders.</li>
            </ul>
          </div>
          
          {/* Experience 4 */}
          <div className="mb-8">
            <div className="flex flex-col md:flex-row md:justify-between md:items-start mb-2">
              <h3 className="text-xl font-bold text-gray-700">Infantryman/Tanker</h3>
              <span className="text-gray-600 text-sm mt-1 md:mt-0">Dec 2015 – Dec 2021</span>
            </div>
            <p className="text-gray-600 italic mb-3">Army National Guard, Leesburg, VA</p>
            <ul className="list-disc ml-5 text-gray-700 space-y-2">
              <li>Patrolled entry points and monitored $45M+ in surveillance equipment, weaponry and 200+ vehicles daily to secure 30+ personnel and 200+ visitors across a 12+ hour shift.</li>
              <li>Key personnel in M1 Abrams Tank operations in Kuwait, managing target detection, gun control, and maintenance with a 4 person team while conducting 40+ member drills and maneuvers.</li>
              <li>Led logistics training for 10+ troops, reducing equipment downtime by 15% and ensuring mission readiness during deployments.</li>
            </ul>
          </div>
          
          {/* Projects Section */}
          <h2 className="text-2xl font-bold mb-6 text-gray-800 border-b-2 border-gray-200 pb-2 mt-12">Notable Projects</h2>
          
          <div className="mb-8">
            <h3 className="text-xl font-bold text-gray-700">Dream Net AI Dream Interpreter</h3>
            <ul className="list-disc ml-5 text-gray-700 space-y-2 mt-3">
              <li>Built an AI dream interpreter using Next.js and ChatGPT (trained on specialized dream data), improving interpretation accuracy by 25% during a 30-tester beta.</li>
              <li>Implemented Supabase for user authentication and backend services, ensuring real-time data management and secure access.</li>
            </ul>
          </div>
          
          <div className="mb-8">
            <h3 className="text-xl font-bold text-gray-700">Automated Options Trading Bot</h3>
            <ul className="list-disc ml-5 text-gray-700 space-y-2 mt-3">
              <li>Coded a Python bot with Alpaca API and OpenAI, delivering 15% ROI in $100,000 paper money tests.</li>
              <li>Designed a Streamlit dashboard with advanced strategies for real-time trade monitoring and execution.</li>
            </ul>
          </div>
        </div>
      </section>

      {/* Projects Section */}
      <section id="projects" className="py-12 px-4 bg-gray-100">
        <div className="container mx-auto max-w-6xl">
          <h2 className="text-2xl font-bold mb-8 text-center text-gray-800">Featured Projects</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {/* Project 1 */}
            <div className="bg-white rounded-lg overflow-hidden shadow-md">
              <div className="h-48 bg-gray-200">
                <img 
                  src="/dream-net.png" 
                  alt="Dream Net AI Screenshot"
                  className="w-full h-full object-cover"
                  onError={(e) => {
                    const target = e.target as HTMLImageElement;
                    target.src = "https://via.placeholder.com/800x400?text=Dream+Net+AI";
                  }}
                />
              </div>
              <div className="p-6">
                <h3 className="text-xl font-bold mb-2 text-gray-800">Dream Net AI</h3>
                <p className="text-gray-600 mb-4">
                  AI dream interpreter using Next.js and ChatGPT, trained on specialized dream data with 25% improved accuracy.
                </p>
                <div className="flex flex-wrap gap-2 mb-4">
                  <span className="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">Next.js</span>
                  <span className="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">ChatGPT</span>
                  <span className="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">Supabase</span>
                </div>
                <a 
                  href="https://dreamy-xi.vercel.app/" 
                  target="_blank" 
                  rel="noopener noreferrer" 
                  className="text-blue-600 hover:text-blue-800 transition-colors"
                >
                  View Project
                </a>
              </div>
            </div>

            {/* Project 2 */}
            <div className="bg-white rounded-lg overflow-hidden shadow-md">
              <div className="h-48 bg-gray-200">
                <img 
                  src="/sokeswig.png" 
                  alt="Soke2x Smoothie Shop Screenshot" 
                  className="w-full h-full object-cover"
                  onError={(e) => {
                    const target = e.target as HTMLImageElement;
                    target.src = "https://via.placeholder.com/800x400?text=Soke2x+Smoothie+Shop";
                  }}
                />
              </div>
              <div className="p-6">
                <h3 className="text-xl font-bold mb-2 text-gray-800">Soke2x Smoothie Shop</h3>
                <p className="text-gray-600 mb-4">
                  Interactive Next.js website for a smoothie brand featuring 3D models, animations, and custom audio visualizers.
                </p>
                <div className="flex flex-wrap gap-2 mb-4">
                  <span className="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">Next.js</span>
                  <span className="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">Three.js</span>
                  <span className="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">Howler.js</span>
                </div>
                <a 
                  href="https://soke2x.vercel.app/" 
                  target="_blank" 
                  rel="noopener noreferrer" 
                  className="text-blue-600 hover:text-blue-800 transition-colors"
                >
                  View Project
                </a>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-800 text-white py-8 px-4 text-center">
  <p className="mb-4">© {new Date().getFullYear()} Lewis Meyers. All rights reserved.</p>
  <div className="flex justify-center items-center space-x-4">
    <a 
      href="https://www.linkedin.com/in/lewiscmeyers/" 
      target="_blank" 
      rel="noopener noreferrer"
      className="text-gray-300 hover:text-white transition-colors py-1"
    >
      LinkedIn
    </a>
    <a 
      href="mailto:meyerslewis193@gmail.com" 
      className="text-gray-300 hover:text-white transition-colors py-1"
    >
      Email
    </a>
    <Link 
      to="/welcome"
      className="text-purple-500 hover:text-purple-400 font-bold transition-all duration-300 passion-link-footer py-1"
    >
      Passion Portfolio
    </Link>
  </div>
</footer>
    </div>
  );
};

export default ProfessionalPortfolio;

================
File: src/pages/Welcome.css
================
@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
  }
  
  .fade-out {
    animation: fadeOut -4s forwards;
  }
  
  .welcome-background {
    background-size: cover;
    background-position: center;
    min-height: 100vh;
  }

  .shadow-text {
    text-shadow: 2px 2px 0 #ff0000;
  }

body:before,
body:after {
  content: '';
  height: 50vh;
  width: 100%;
  position: fixed;
  left: 0;
  background: #1c2020;
  z-index: 100;
}

body:before {
  top: 0;
  transform: translateY(-100%);
}

body:after {
  bottom: 0;
  transform: translateY(100%);
}

@keyframes delay {
  0%, 40%, 100% { 
    transform: scaleY(0.05);
  }
  20% { 
    transform: scaleY(1.0);
  }
}

.loader {
  margin: 0 auto;
  width: 60px;
  height: 50px;
  text-align: center;
  font-size: 10px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateY(-50%) translateX(-50%);
  z-index: 500;
  opacity: 0;
}

.loader > div {
  height: 100%;
  width: 8px;
  display: inline-block;
  float: left;
  margin-left: 2px;
  animation: delay 0.9s infinite ease-in-out;
}

.loader .bar1 {
  background-color: #754fa0;
}

.loader .bar2 {
  background-color: #09b7bf;
  animation-delay: -0.8s;
}

.loader .bar3 {
  background-color: #90d36b;
  animation-delay: -0.7s;
}

.loader .bar4 {
  background-color: #f2d40d;
  animation-delay: -0.6s;
}

.loader .bar5 {
  background-color: #fcb12b;
  animation-delay: -0.5s;
}

.loader .bar6 {
  background-color: #ed1b72;
  animation-delay: -0.4s;
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
  }
  
  .fade-out {
    animation: fadeOut 2.5s forwards;
  }

================
File: src/pages/Welcome.tsx
================
import React, { useState, useEffect, useRef } from 'react';
import { useNavigate } from 'react-router-dom';
import './Welcome.css'; 

const Welcome: React.FC = () => {
  const navigate = useNavigate();
  const [isAnimating, setIsAnimating] = useState(false);
  const [isTransitioning, setIsTransitioning] = useState(false);
  const loaderRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    import('gsap').then(({ gsap, Power2 }) => {
      import('gsap/CSSRulePlugin').then(({ CSSRulePlugin }) => {
        gsap.registerPlugin(CSSRulePlugin);
      });
    });
  }, []);

  const transition = () => {
    setIsTransitioning(true);
    
    import('gsap').then(({ gsap }) => {
      import('gsap/CSSRulePlugin').then(({ CSSRulePlugin }) => {
        gsap.registerPlugin(CSSRulePlugin);
        const tl = gsap.timeline({
          onComplete: () => {
            setIsTransitioning(false);
            navigate('/home');
          }
        });

        tl.to('body:before', { duration: 0.3, cssRule: { top: '50%' }, ease: "power2.out" })
          .to('body:after', { duration: 0.3, cssRule: { bottom: '50%' }, ease: "power2.out" }, "<")
          .to(loaderRef.current, { duration: 0.3, opacity: 1 })
          .to(loaderRef.current, { duration: 1.5, opacity: 1 }) // Hold the loader visible
          .to('body:before', { duration: 0.3, cssRule: { top: '0%' }, ease: "power2.out" })
          .to('body:after', { duration: 0.3, cssRule: { bottom: '0%' }, ease: "power2.out" }, "<")
          .to(loaderRef.current, { duration: 0.3, opacity: 0 }, "<");
      });
    });
  };

  const handleEnter = () => {
    setIsAnimating(true);
    
    transition();
  };

  return (
    <>
      <div className="loader" ref={loaderRef}>
        <div className="bar1"></div>
        <div className="bar2"></div>
        <div className="bar3"></div>
        <div className="bar4"></div>
        <div className="bar5"></div>
        <div className="bar6"></div>
      </div>
      
      <div 
        className={`flex flex-col justify-center items-center h-screen bg-cover bg-center font-pixel text-white text-center welcome-background ${isAnimating ? 'fade-out' : ''}`}
        style={{ 
          backgroundImage: "url('/pixel_desert_night.jpg')",
        }}
      >
        <h1 className="text-2xl md:text-3xl mb-4 font-bold shadow-text">
          Welcome to Lewis.dev
        </h1>
        <p className="mb-8">Time to get shwifty</p>
        <div className="text-2xl animate-bounce mb-6">&#8595;</div>
        <button 
          onClick={handleEnter}
          className="font-pixel py-2 px-6 bg-white text-black border-2 border-black hover:bg-black hover:text-white transition-colors duration-300"
          disabled={isAnimating || isTransitioning}
        >
          Enter
        </button>
      </div>
    </>
  );
};

export default Welcome;

================
File: src/App.css
================
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

================
File: src/App.test.tsx
================
import React from 'react';
import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});

================
File: src/App.tsx
================
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Welcome from '../src/pages/Welcome';
import Home from './pages/Home';
import ProfessionalPortfolio from './pages/ProfessionalPortfolio';

const App: React.FC = () => {
  return (
    <Router>
      <Routes>
        {/* Always show professional portfolio first */}
        <Route path="/" element={<ProfessionalPortfolio />} />
        
        {/* Other routes */}
        <Route path="/welcome" element={<Welcome />} />
        <Route path="/home" element={<Home />} />
        <Route path="/professional" element={<ProfessionalPortfolio />} />
      </Routes>
    </Router>
  );
};

export default App;

================
File: src/index.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&family=Danfo&family=Jacquard+12&family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Orbitron&family=Pixelify+Sans:wght@400..700&family=Press+Start+2P&display=swap');

body {
  margin: 0;
  font-family: 'Lato', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow-x: hidden;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

html, body {
  overflow-x: hidden;
  width: 100%;
  box-sizing: border-box;
}

* {
  box-sizing: inherit;
}

/* Hide scrollbar but allow scrolling */
html, body {
  -ms-overflow-style: none;  
  scrollbar-width: none;     
  scroll-behavior: smooth;
}

html::-webkit-scrollbar,
body::-webkit-scrollbar {
  display: none;
}

@layer components {
  .pixel-btn {
    @apply font-pixel px-4 py-2 border-2 border-white rounded transition-all duration-300 
    hover:bg-white hover:bg-opacity-20;
  }

  .text-shadow {
    text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);
  }
  
  /* New font utility classes */
  .font-caveat {
    font-family: 'Caveat', cursive;
  }
  
  .font-danfo {
    font-family: 'Danfo', sans-serif;
  }
  
  .font-jacquard {
    font-family: 'Jacquard 12', serif;
  }
  
  .font-lato {
    font-family: 'Lato', sans-serif;
  }
  
  .font-orbitron {
    font-family: 'Orbitron', sans-serif;
  }
  
  .font-pixelify {
    font-family: 'Pixelify Sans', cursive;
  }
  
  .font-press-start {
    font-family: 'Press Start 2P', cursive;
  }
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-40px); }
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

@keyframes float {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(-100px, 10px);
  }
  50% {
    transform: translate(-90px, 50px);
  }
  75% {
    transform: translate(-30px, -10px);
  }
  100% {
    transform: translate(0, 0);
  }
}

================
File: src/index.tsx
================
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(
  document.getElementById('root') as HTMLElement
);
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

================
File: src/logo.svg
================
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>

================
File: src/react-app-env.d.ts
================
/// <reference types="react-scripts" />

================
File: src/reportWebVitals.ts
================
import { ReportHandler } from 'web-vitals';

const reportWebVitals = (onPerfEntry?: ReportHandler) => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

================
File: src/setupTests.ts
================
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

================
File: package.json
================
{
  "name": "mobilefirstportfolio",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.2.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.5.2",
    "@types/node": "^16.18.126",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@types/react-router-dom": "^5.3.3",
    "gsap": "^3.12.7",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-router-dom": "^7.3.0",
    "react-scripts": "5.0.1",
    "react-simple-typewriter": "^5.0.1",
    "typescript": "^4.9.5",
    "web-vitals": "^2.1.4",
    "yocto-queue": "^1.0.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "autoprefixer": "^10.4.14",
    "postcss": "^8.4.31",
    "tailwindcss": "^3.4.0"
  }
}

================
File: postcss.config.js
================
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

================
File: README.md
================
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

The page will reload if you make edits.\
You will also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can’t go back!**

If you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.

You don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

================
File: tailwind.config.js
================
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
    "./public/index.html"
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          100: '#e6c0f6',
          200: '#b3abf3',
          300: '#9420a6',
          400: '#754fa0',
          500: '#5521b5',
          600: '#6d28d9',
          700: '#7c3aed'
        }
      },
      fontFamily: {
        'pixel': ['"Press Start 2P"', 'cursive'],
        'caveat': ['Caveat', 'cursive'],
        'danfo': ['Danfo', 'sans-serif'],
        'jacquard': ['Jacquard 12', 'serif'],
        'lato': ['Lato', 'sans-serif'],
        'orbitron': ['Orbitron', 'sans-serif'],
        'pixelify': ['Pixelify Sans', 'cursive'],
        'press-start': ['"Press Start 2P"', 'cursive']
      },
      animation: {
        'bounce': 'bounce 1s infinite',
        'pulse': 'pulse 3s infinite alternate',
        'float': 'float 6s infinite ease-in-out',
        'fadeOut': 'fadeOut 1.5s forwards',
      },
      keyframes: {
        bounce: {
          '0%, 100%': { transform: 'translateY(0)' },
          '50%': { transform: 'translateY(-10px)' },
        },
        pulse: {
          '0%, 100%': { transform: 'scale(1)' },
          '50%': { transform: 'scale(1.05)' },
        },
        float: {
          '0%, 100%': { transform: 'translateY(0)' },
          '50%': { transform: 'translateY(-10px)' },
        },
        fadeOut: {
          'from': { opacity: '1' },
          'to': { opacity: '0' },
        }
      },
      backgroundImage: {
        'gradient-purple': 'linear-gradient(to bottom, #9420a6 30%, #b3abf3 80%, #e6c0f6 100%)'
      }
    }
  },
  plugins: []
}

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "target": "es5",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx"
  },
  "include": [
    "src"
  ]
}
